generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  packs         Pack[]
  balance       Decimal   @default(0) @db.Decimal(10, 2)

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Pack {
  id          String     @id @default(cuid())
  name        String
  description String?
  price       Float
  coverImage  String?
  items       PackItem[]
  commission  Float      @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String
  user        User       @relation(fields: [userId], references: [id])
}

model Item {
  id          String     @id @default(cuid())
  name        String
  description String?    @db.LongText()
  // rarity      Float
  price       Float      @default(0)
  image       String?
  brand       String?
  packs       PackItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model PackItem {
  pack     Pack    @relation(fields: [packId], references: [id])
  packId   String
  item     Item    @relation(fields: [itemId], references: [id])
  itemId   String
  quantity Decimal @default(1) @db.Decimal(10, 4)

  @@id([packId, itemId])
}
